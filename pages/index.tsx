import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import React, { useState } from 'react';
import ColorMode from '../Components/ColorMode/ColorMode';
import Input from '../Components/UI/Input';
import Form from '../Components/UI/Form';
import Button from '../Components/UI/Button';
import IsLoading from '../Components/UI/IsLoading';
import { useRouter } from 'next/router';

const Home: NextPage = () => {
  const [user, setUser] = useState({ name: '', email: '', password: '' });
  const [error, setError] = useState({ message: '', isError: false });
  const [isLoading, setIsLoading] = useState(false);

  const router = useRouter();
  
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setUser((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setIsLoading(true);
    setError({ message: '', isError: false });

    if (!user.name || !user.email || !user.password) {
      setError({ message: 'Todos campos são obrigatórios', isError: true });
      setIsLoading(false);
      return;
    }

    try {
      await axios.post('/api/auth/signup', user);
      router.reload();
    } catch (error: any) {
      setIsLoading(false);
      setError({ message: error.response.data.message, isError: true });
    }
  };

  return (
    <>
      <Head>
        <title>cine.mize</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className='flex flex-col h-screen justify-center sm:flex-row sm:items-center sm:justify-end sm:gap-12 '>
        <h1 className='text-3xl text-center mb-12 sm:mb-0 sm:text-6xl sm:-mt-12 '>
          c<span className='text-indigo-600 dark:text-indigo-400'>i</span>ne
          <span className='text-indigo-600 dark:text-indigo-400'>.</span>mi
          <span className='text-indigo-600 dark:text-indigo-400'>z</span>e
        </h1>
        <div className='sm:w-6/12 md:w-80'>
          <h2 className='text-2xl text-center '>junte-se a nós</h2>
          <span className='text-sm block text-center my-2 min-h-[20px]'>
            {error.isError && error.message}
          </span>
          <Form onSubmit={handleSubmit} className='gap-4 w-full'>
            <Input
              type='text'
              className='rounded-md w-full dark:border-dark'
              placeHolder='Nome'
              name='name'
              id='name'
              value={user.name ?? ''}
              onChange={handleChange}
            />

            <Input
              type='text'
              className='rounded-md w-full dark:border-dark'
              placeHolder='E-mail'
              name='email'
              id='email'
              value={user.email ?? ''}
              onChange={handleChange}
            />

            <Input
              type='password'
              className='rounded-md w-full dark:border-dark'
              placeHolder='Senha'
              name='password'
              id='password'
              value={user.password || ''}
              onChange={handleChange}
            />

            <Button type='submit' className='min-h-[40px] bg-indigo-600 py-2 rounded-md flex items-center justify-center'>
              {isLoading? <IsLoading /> : 'Criar conta'}
            </Button>
          </Form>
          <div className='flex items-center justify-center gap-2 text-md'>
            <h3 className='text-center my-4 '>Já tem uma conta?</h3>
            <Link href='/login'>
              <a className='block text-center text-md hover:text-gray-900 dark:hover:text-indigo-300 transition underline'>
                Login
              </a>
            </Link>
          </div>
        </div>
      </div>
      <div className='fixed top-8 right-8 flex mt-auto mb-10 justify-left'>
        <ColorMode size={22} />
      </div>
    </>
  );
};

export default Home;
