import { useState } from 'react';

import Head from 'next/head';
import { GetServerSideProps, NextPage } from 'next';
import { UserProfile } from '../../ts/types/user';

import UserProfileContainer from '../../components/UserProfileContainer';
import UserProfileCard from '../../components/UserProfileCard';
import TabButtons from '../../components/TabButtons';
import TabContent from '../../components/TabContent';
import UserFollowerCard from '../../components/UserFollowerCard';
import PostCard from '../../components/PostCard';

import { tabs } from '../../utils/constants';

import User from '../../models/User';
import { connect } from 'mongoose';
const MONGODB_URI = process.env.MONGODB_URI || '';

import { getUserId, getUserPosts, getFollowersAndFollowing, getUserFollow } from '../../utils/dbFunctions';

import { PostCard as PC } from '../../ts/types/post';

const Profile: NextPage<{
  user: UserProfile;
  followers: UserProfile[];
  following: UserProfile[];
  posts:PC[];
  loggedUserId:string
}> = ({ user, followers, following, posts, loggedUserId }) => {
  const [tabIndex, setTabIndex] = useState(0);

  return (
    <>
      <Head>
        <title>cine.mize - profile</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <section>
        <UserProfileContainer>
          <UserProfileCard user={user} />
          <TabButtons
            followersQty={followers.length}
            followingQty={following.length}
            setTabIndex={setTabIndex}
            index={tabIndex}
          />
        </UserProfileContainer>
          <TabContent tab='posts' activeTab={tabs[tabIndex]}>
            {posts.map((post) => {
              return <PostCard loggedUserId={loggedUserId} key={post.postId} {...post} />;
            })}
          </TabContent>
          <TabContent tab='followers' activeTab={tabs[tabIndex]}>
            {followers.map((user) => {
              return <UserFollowerCard key={user.userId} {...user} />;
            })}
          </TabContent>
          <TabContent tab='following' activeTab={tabs[tabIndex]}>
            {following.map((user) => {
              return <UserFollowerCard key={user.userId} {...user} />;
            })}
          </TabContent>
      </section>
    </>
  );
};
export default Profile;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  await connect(MONGODB_URI).catch((err) => console.log(err));

  const jwt = ctx.req.cookies.CinemizeJWT;

  const _id = await getUserId(jwt);
  
  const user = await User.findOne({_id}, { password: 0, createdAt: 0, _id: 0, email: 0, updatedAt: 0 });
  
  const userResponse = await JSON.parse(JSON.stringify(user));

  const loggedUserPosts = await getUserPosts(userResponse?.userId!)

  const { followers, following } = await getUserFollow(userResponse?.userId)

  
  return {
    props: {
      user: userResponse,
      followers: followers,
      following: following,
      posts: loggedUserPosts,
      loggedUserId: userResponse?.userId
    },
  };
};
